name: Build

on: [push]

env:
  BUILD_TYPE: RelWithDebInfo
  QTEST_FUNCTION_TIMEOUT: 60000

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            compiler: /usr/bin/g++-10
            name: gcc-10
            qt: 5
          - os: ubuntu-latest
            compiler: /usr/bin/clang++-11
            name: clang-11
            qt: 5
          - os: ubuntu-latest
            compiler: /usr/bin/g++-10
            name: gcc-10
            qt: 6
          - os: ubuntu-latest
            compiler: /usr/bin/clang++-11
            name: clang-11
            qt: 6
          #- os: windows-latest
          #  compiler: msvc

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-${{ matrix.name }}-qt${{ matrix.qt }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get install -y --no-install-recommends build-essential dbus dbus-x11
        if [[ "${{ matrix.name }}" == "clang*" ]]; then
          sudo apt-get install -y --no-install-recommends libc++1-11 libc++-11-dev libc++abi-11-dev
        fi
        if [[ ${{ matrix.qt }} -eq 5 ]]; then
          sudo apt-get install -y --no-install-recommends qtbase5-dev
        else
          sudo apt-get install -y --no-install-recommends qtbase6-dev
        fi
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DQCORO_ENABLE_ASAN=ON

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE --output-on-failure

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.os }}-${{ matrix.name }}
        path: build/**
